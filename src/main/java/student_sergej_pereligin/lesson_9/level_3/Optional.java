package student_sergej_pereligin.lesson_9.level_3;


public class Optional {
//    Для чего применяются объекты этого класса?
    //*Optional Применяется тогда, когда выражение null неудобно или неуместно.
    //*Optional улучшает читаемость кода
    //*Применив Optional, мы избегаем потенциальных ошибок компиляции или ошибок
    //программиста.


//    Какие два состояния могут быть у объектов этого класса?
    //Optional инкапсулирует опциональное значение, но может и быть пустым.


//    Как создаются экземпляры данного класса?
    //*Можно создать пустой экземпляр: Optional<String> empty = Optional.empty();
    //*Можно создать экземпляр со значением: Optional<String> opt = Optional.of(nameOfElement);
    //При этом, если поданное значение окажется null, будет ошибка компиляции.
    //Если ожидается, что значение будет null: Optional<String> opt = Optional.ofNullable(name);
    //


//    Как можно проверить в каком состоянии находится экземпляр данного класса?
    //проверить значение можно, используя isPresent() или  isEmpty(). Возвращаться будет true или false.

//    Как можно получить объект, который находится внутри Optional?
    // Используя get().
    // String name = optional.get();


}
